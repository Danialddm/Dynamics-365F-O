--------------code for one method for all dimensions name insted of 4 methods--------------------
FieldId dimFieldId;
EcoResProductRecId product;
boolean isCalledFromInventProductDimensionLookup;

if (FormDataUtil::isFormDataSource(_inventDim))
{
    FormDataSource dataSource = FormDataUtil::getFormDataSource(_inventDim);
    if (formHasMethod(dataSource.formRun(), formMethodStr(InventProductDimensionLookup, inventDimSetupObject)))
    {
        Object formRun = dataSource.formRun();
        InventDimCtrl_Frm_Lookup inventDimCtrl_Frm_Lookup = formRun.inventDimSetupObject();
        dimFieldId = inventDimCtrl_Frm_Lookup.parmMainSortFieldId();//4 dimension field id
        product = InventTable::find(inventDimCtrl_Frm_Lookup.callerItemId()).Product;
        isCalledFromInventProductDimensionLookup = true;
    }
-----------one way- more simple--------------------------
EcoResConfiguration ecoResConfiguration;
EcoResProductMasterConfiguration ecoResProductMasterConfiguration;
select firstonly RecId from ecoResProductMasterConfiguration
where ecoResProductMasterConfiguration.ConfigProductMaster == product//(product must be fetched from one place-in this tip you can get from the above)
exists join ecoResConfiguration
where ecoResConfiguration.RecId == ecoResProductMasterConfiguration.Configuration
&& ecoResConfiguration.Name ==  _inventDim.configId;
dimName = EcoResProductMasterDimValueTranslation::getDescriptionOrDefaultDescription(dimRecId, userLanguageId);
-------------------------------OR another way-------------------------------------
public static Name getSize(VendPackingSlipTrans _vendPackingsliptrans)
    {
        EcoResProductMasterSize ecoResProductMasterSize;
        ;
        select ecoResProductMasterSize
            where ecoResProductMasterSize.Size == EcoResSize::findByName(InventDim::find(InventTrans::findByInventTransOrigin
                        (InventTransOrigin::findByInventTransId
                        (_vendPackingsliptrans.InventTransId).RecId).inventDimId).InventSizeId).RecId
            && ecoResProductMasterSize.SizeProductMaster == inventTable::find(_vendPackingsliptrans.ItemId).Product
            && ecoResProductMasterSize.SizeProductDimensionAttribute == EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(fieldNum(InventDim, InventSizeId));
            
        return EcoResProductMasterDimValueTranslation::findByProductMasterDimValLanguage(ecoResProductMasterSize.RecId, 'en-us').Name;
    }
-----------------------------
    public static Name getColor(VendPackingSlipTrans _vendPackingsliptrans)
    {
        EcoResProductMasterColor ecoResProductMasterColor;
        ;
        select ecoResProductMasterColor
            where ecoResProductMasterColor.Color == EcoResColor::findByName(InventDim::find(InventTrans::findByInventTransOrigin
                        (InventTransOrigin::findByInventTransId
                        (_vendPackingsliptrans.InventTransId).RecId).inventDimId).InventColorId).RecId
            && ecoResProductMasterColor.ColorProductMaster == inventTable::find(_vendPackingsliptrans.ItemId).Product
            && ecoResProductMasterColor.ColorProductDimensionAttribute == EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(fieldNum(InventDim, InventColorId));
            
        return EcoResProductMasterDimValueTranslation::findByProductMasterDimValLanguage(ecoResProductMasterColor.RecId, 'en-us').Name;
    }
------------------------------------
    public static Name getStyle(VendPackingSlipTrans _vendPackingsliptrans)
    {
        EcoResProductMasterstyle ecoResProductMasterStyle;
        ;
        select ecoResProductMasterStyle
            where ecoResProductMasterStyle.Style == EcoResStyle::findByName(InventDim::find(InventTrans::findByInventTransOrigin
                        (InventTransOrigin::findByInventTransId
                        (_vendPackingsliptrans.InventTransId).RecId).inventDimId).InventStyleId).RecId
            && ecoResProductMasterStyle.StyleProductMaster == inventTable::find(_vendPackingsliptrans.ItemId).Product
            && ecoResProductMasterStyle.StyleProductDimensionAttribute == EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(fieldNum(InventDim, InventStyleId));
            
        return EcoResProductMasterDimValueTranslation::findByProductMasterDimValLanguage(ecoResProductMasterStyle.RecId, 'en-us').Name;
    }
=====================================OR use this query====================================================================================
USE [AxDB]
GO

/****** Object:  View [dbo].[ARECORESPRODUCTCOLORNAMEVIEW]    Script Date: 11/10/2023 9:41:59 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[ARECORESPRODUCTCOLORNAMEVIEW] AS SELECT T1.PARTITION AS PARTITION, T1.RECID AS RECID, 
T2.PARTITION AS PARTITION#2, T3.RECID AS ECORESCOLORRECID, T3.ARABICNAME AS ARABICNAME, T3.NAME AS COLORID, 
T3.PARTITION AS PARTITION#3, T4.DISPLAYPRODUCTNUMBER AS DISPLAYPRODUCTNUMBER, T4.ARBRANDNAME AS ARBRANDNAME, 
T4.PARTITION AS PARTITION#4, T5.PARTITION AS PARTITION#5, T6.DESCRIPTION AS DESCRIPTION, T6.PARTITION AS PARTITION#6 
FROM ECORESPRODUCTMASTERDIMENSIONVALUE T1 
CROSS JOIN ECORESPRODUCTDIMENSIONATTRIBUTE T2 
CROSS JOIN ECORESCOLOR T3 
CROSS JOIN ECORESPRODUCT T4 
CROSS JOIN ECORESPRODUCTMASTERDIMENSIONVALUE T5 
CROSS JOIN ECORESPRODUCTMASTERDIMVALUETRANSLATION T6
WHERE(((((((( T2.DIMENSIONTABLEID  =  12903)  
AND (( T1.COLORPRODUCTDIMENSIONATTRIBUTE  =  T2.RECID)  
AND ( T1.PARTITION  =  T2.PARTITION)))  
AND (( T1.COLOR  =  T3.RECID)  
AND ( T1.PARTITION  =  T3.PARTITION)))  
AND (( T1.COLORPRODUCTMASTER  =  T4.RECID)  
AND ( T1.PARTITION  =  T4.PARTITION)))  
AND (( T1.RECID  =  T5.RECID)  
AND ( T1.PARTITION  =  T5.PARTITION)))  
AND (( T6.LANGUAGEID  =  N'en-us')  
AND (( T5.RECID  =  T6.PRODUCTMASTERDIMENSIONVALUE)  
AND ( T5.PARTITION  =  T6.PARTITION))))  
AND  T4.INSTANCERELATIONTYPE IN( 22731))  
AND  T1.INSTANCERELATIONTYPE IN( 10236))
GO

-----in AX, user relation to YES for all joining---



