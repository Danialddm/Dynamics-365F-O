To grab the info message in the UI:
catch
{ 
SysInfologEnumerator s = SysInfologEnumerator::newData(infolog.cut());                     
while (s.moveNext())                            
{                                
  SysInfologMessageStruct strc = new SysInfologMessageStruct(s.currentMessage());                                
  Exception exception = s.currentException();                                
  errorRun += strfmt('%1--%2', exception, strc.message()) + ' ';                                                            
}                                                  
}
--------------------------------------------------------------------------------------------------------------------
catch(Exception::Deadlock)        
{            
ttsabort;            
retry;        
}        
        
catch(Exception::CLRError)        
{            
ttsAbort;                        
System.Exception ex  = CLRInterop::getLastException();            
response.ResultResponse(ex.Message);                              
}
           

----------------------------------------------------------------------------------------------------------------------
try
    {
        ttsbegin;

        // do stuff here
     
        ttsCommit;
    }
    catch (Exception::Deadlock)
    {
        // retry on deadlock
        retry;
    }
    catch (Exception::UpdateConflict)
    {
        // try to resolve update conflict
        if (appl.ttsLevel() == 0)
        {
            if (xSession::currentRetryCount() >= #RetryNum)
            {
                throw Exception::UpdateConflictNotRecovered;
            }
            else
            {
                retry;
            }
        }
        else
        {
            throw Exception::UpdateConflict;
        }
    }
    catch(Exception::DuplicateKeyException)
    {
        // retry in case of an duplicate key conflict
        if (appl.ttsLevel() == 0)
        {
            if (xSession::currentRetryCount() >= #RetryNum)
            {
                throw Exception::DuplicateKeyExceptionNotRecovered;
            }
            else
            {
                retry;
            }
        }
        else
        {
            throw Exception::DuplicateKeyException;
        }
    }
